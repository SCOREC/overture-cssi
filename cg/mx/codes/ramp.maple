# currentdir("/Users/henshaw/overtureFramework/cg/mx/codes");
# restart; read "ramp.maple";
clear;

with(CodeGeneration):

# f := a1*x + a3*x^3 + a5*x^5 + a7*x^7;

ramp:=4;

if( ramp = 4 )then

  # RAMP4 -- has 4 zero deriv's at t=0 and t=1
  f := a1*x + a3*x^3 + a5*x^5 + a7*x^7 + a9*x^9;

  eqn1:= subs(x=1,f);
  eqn2:= subs(x=1,diff(f,x));
  eqn3:= subs(x=1,diff(f,x,x));
  eqn4:= subs(x=1,diff(f,x,x,x));
  eqn5:= subs(x=1,diff(f,x,x,x,x));
  
  # s := solve({eqn1=1,eqn2=0,eqn3=0,eqn4=0},{a1,a3,a5,a7});
  s := solve({eqn1=1,eqn2=0,eqn3=0,eqn4=0,eqn5=0},{a1,a3,a5,a7,a9});
  
  assign(s);
  
  r := (f + 1)/2:
  r := simplify(subs(x=2*t-1,r)):
  
  rt:= diff(r,t):
  rtt:= diff(r,t,t):
  rttt:= diff(r,t,t,t):
  
  printf("Ramp4:\n");
  printf("r=%s\n",convert(r,string));
  printf("rt=%s\n",convert(rt,string));
  printf("rtt=%s\n",convert(rtt,string));
  printf("rttt=%s\n",convert(rttt,string));

elif( ramp = 5) then

  # RAMP5 -- has 5 zero deriv's at t=0 and t=1

  # Start on [-1,1] : f will be odd: 
  f := a1*x + a3*x^3 + a5*x^5 + a7*x^7 + a9*x^9 + a11*x^11;

  # make f'=0, f''=0, etc at x=1
  eqn1:= subs(x=1,f);
  eqn2:= subs(x=1,diff(f,x));
  eqn3:= subs(x=1,diff(f,x$2));
  eqn4:= subs(x=1,diff(f,x$3));
  eqn5:= subs(x=1,diff(f,x$4));
  eqn6:= subs(x=1,diff(f,x$5));
  
  s := solve({eqn1=1,eqn2=0,eqn3=0,eqn4=0,eqn5=0,eqn6=0},{a1,a3,a5,a7,a9,a11});
  
  assign(s);
  
  r := (f + 1)/2:
  r := simplify(subs(x=2*t-1,r)):
  
  r   := convert(r,'horner',t):
  rt  := convert(diff(r,t),'horner',t):
  rtt := convert(diff(r,t,t),'horner',t):
  rttt:= convert(diff(r,t,t,t),'horner',t):
  rt4 := convert(diff(r,t$4),'horner',t):
  rt5 := convert(diff(r,t$5),'horner',t):
  
  printf("Ramp5: r(1)=%e, rt(1)=%e, rt2(1)=%e, rt3(1)=%e, rt4(1)=%e, rt5(1)=%e\n",subs(t=1,r),subs(t=1,rt),subs(t=1,rtt),subs(t=1,rttt),subs(t=1,rt4),subs(t=1,rt5));

  printf("r=%s\n",convert(r,string));
  printf("rt=%s\n",convert(rt,string));
  printf("rtt=%s\n",convert(rtt,string));
  printf("rttt=%s\n",convert(rttt,string));
  printf("rtttt=%s\n",convert(rt4,string));
  printf("rttttt=%s\n",convert(rt5,string));

elif( ramp = 6 ) then

  # RAMP6 -- has 6 zero deriv's at t=0 and t=1

  # Start on [-1,1] : f will be odd: 
  f := a1*x + a3*x^3 + a5*x^5 + a7*x^7 + a9*x^9 + a11*x^11+ a13*x^13;

  # make f'=0, f''=0, etc at x=1
  eqn1:= subs(x=1,f);
  eqn2:= subs(x=1,diff(f,x));
  eqn3:= subs(x=1,diff(f,x$2));
  eqn4:= subs(x=1,diff(f,x$3));
  eqn5:= subs(x=1,diff(f,x$4));
  eqn6:= subs(x=1,diff(f,x$5));
  eqn7:= subs(x=1,diff(f,x$6));
  
  s := solve({eqn1=1,eqn2=0,eqn3=0,eqn4=0,eqn5=0,eqn6=0,eqn7=0},{a1,a3,a5,a7,a9,a11,a13});
  
  assign(s);
  
  r := (f + 1)/2:
  r := simplify(subs(x=2*t-1,r)):
  
  r   := convert(r,'horner',t):
  rt  := convert(diff(r,t),'horner',t):
  rtt := convert(diff(r,t,t),'horner',t):
  rttt:= convert(diff(r,t,t,t),'horner',t):
  rt4 := convert(diff(r,t$4),'horner',t):
  rt5 := convert(diff(r,t$5),'horner',t):
  rt6 := convert(diff(r,t$6),'horner',t):
  
  
  printf("Ramp6: r(1)=%e, rt(1)=%e, rt2(1)=%e, rt3(1)=%e, rt4(1)=%e, rt5(1)=%e, rt6(1)=%e\n",subs(t=1,r),subs(t=1,rt),subs(t=1,rtt),subs(t=1,rttt),subs(t=1,rt4),subs(t=1,rt5),subs(t=1,rt6));
  printf("r=%s\n",convert(r,string));
  printf("rt=%s\n",convert(rt,string));
  printf("rtt=%s\n",convert(rtt,string));
  printf("rttt=%s\n",convert(rttt,string));
  printf("rtttt=%s\n",convert(rt4,string));
  printf("rttttt=%s\n",convert(rt5,string));
  printf("rtttttt=%s\n",convert(rt6,string));



end if;

plot(r,t=0..1);