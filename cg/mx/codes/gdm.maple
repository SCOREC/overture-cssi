#
# Compute some quanities for the GDM (generalized dispersion model)
#
# currentdir("/Users/henshaw/overtureFramework/cg/mx/codes"); 
# To use: restart; read "gdm.maple";
#
with(StringTools):

assume(sr::real,si::real,psirSum::real,psiiSum::real,Hr::real,Hi::real,alphaP::real,ct::real,st::real,coeffH::real);

#
# ----- Compute the coefficients of H for the scattering of a GDM wave from a cylinder ----
#   See DMX_ADE_paper.pdf
#

s := sr + I*si;
psi := psirSum + I*psiiSum;

H := Hr + I*Hi;

expI := ct + I*st; 

# note factor of I
# f := I*coeffH*H*expI/( s*(1.+alphaP*psi) );
f := I*coeffH*H*expI * ( s*(1.+alphaP*psi) );

# fIm := Im(f);
fIm := simplify(Im(f));

cHr := coeff(fIm,Hr);
cHi := coeff(fIm,Hi);

fileName:=sprintf("gdmMagneticFieldCoefficients.h"):
file := fopen( fileName,WRITE ):
fprintf(file,"// Coefficients generated by cg/mx/codes/gdm.maple\n");

fprintf(file,"real psirSum=psir[0], psiiSum=psii[0];\n");
# fprintf(file,"real psirSum2=psirSum*psirSum, psiiSum2=psiiSum*psiiSum, sr2=sr*sr, si2=si*si, alphaP2=alphaP*alphaP;\n");

cHr := convert(cHr,string);
cHi := convert(cHi,string);

cHr := SubstituteAll(cHr,"^",""):   # remove ^
cHi := SubstituteAll(cHi,"^",""):   # remove ^
    
cHrm:=cHr; cHrm := SubstituteAll(cHrm,"st","stm"):  cHrm := SubstituteAll(cHrm,"ct","ctm"):  
cHim:=cHi; cHim := SubstituteAll(cHim,"st","stm"):  cHim := SubstituteAll(cHim,"ct","ctm"):  
    
fprintf(file,"cHr=%s;\n",cHr);
fprintf(file,"cHi=%s;\n",cHi);

fprintf(file,"cHrm=%s;\n",cHrm);
fprintf(file,"cHim=%s;\n",cHim);


fclose(file);
     
printf("Output written to file=[%s]\n",fileName);
