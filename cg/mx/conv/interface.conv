# Measure convergence rates for cgmx
#
# ==== INTERFACE - PLANE WAVE SCATTERING ====
# -- second order
#   conv.p interface.conv -cg=twoSquaresInterface -ic=pmic -tf=.1 -tp=.1 -order=2 -ng=3
# -- fourth order
#
$check="mx.check";
# --------options: 
#   -order : 2 or 4 
#   -interp = e or i if the grids were made with explicit or implicit interpolation
#   -ng : number of grids to use (i.e. how many times is the grid refined)
#   -errorNorm:  set to 1 or 2 to show L1 and L2 norm errors
# 
# Set default parameters: 
$cg="square"; $option="interface"; 
$cmdFile="interface.cmd"; 
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$cgmx = "$CGBUILDPREFIX/mx/bin/cgmx";  # command for cgmx
$cmdDir="$ENV{CG}/mx/runs/interface";  
$tf=.5; $tp=.1; $order = "2"; $ng=3; $cfl=.9; $bg="box"; $interfaceIts=3; 
$eps1=1.; $eps2=1.; $ic="pmic"; $bc="d"; $cons=0;  $useSosupDissipation=0;
$tz=""; $degreex=2; $degreet=2; 
$kx=1; $ky=0; $kz=0; 
@interfaceNormal = (); @interfacePoint = ();
$modeGDM=-1; 
@alphaP=();  @npv=(); # GDM parameters
@a0 = (); @a1=(); @b0=(); @b1=(); # these must be null for GetOptions to work, defaults are given below 
$dm="none"; # dispersive model
$diss=.0; $dissOrder=-1; 
$errorNorm=0; $method="NFDTD"; 
$alwaysCompute=1; $saveVectorErrors=0; 
$numberOfDimensions=2;
$xa=.00001; $xb=1.1; $ya=-.55;  $yb=.55; $za=-.55; $zb=.55; # material box for BA
$matFile=""; $matFile1=""; $matFile2="baAir.txt"; 
$nm="#"; # nonlinear model
$solveForAllFields=1;   $numMatRegions=1; $regionFile=""; $dispersionOption="s"; $ts="rk4"; 
$gridSuffix="";
#
GetOptions( "name=s"=>\$name,"order=s"=>\$order,"ng=i"=>\$ng,"tf=f"=>\$tf,"diss=f"=>\$diss,\
            "fixed=s"=>\$fixed,"cfl=f"=>\$cfl,"alwaysCompute=i"=>\$alwaysCompute,"method=s"=>\$method,"tp=f"=>\$tp,\
            "errorNorm=i"=>\$errorNorm,"m=f"=>\$m,"n=f"=>\$n,"dissOrder=i"=>\$dissOrder,"cg=s"=>\$cg,\
            "bg=s"=>\$bg,"option=s"=>\$option,"ic=s"=>\$ic,"bc=s"=>\$bc,"dm=s"=>\$dm,"tz=s"=>\$tz,\
            "eps1=f"=>\$eps1,"eps2=f"=>\$eps2,"cons=i"=>\$cons,"useSosupDissipation=i"=>\$useSosupDissipation,\
            "kx=f"=>\$kx,"ky=f"=>\$ky,"kz=f"=>\$kz,"npv=i{1,}"=>\@npv,"modeGDM=i"=>\$modeGDM,"alphaP=f{1,}"=>\@alphaP,\
	    "interfaceIts=i"=>\$interfaceIts,"saveVectorErrors=i"=>\$saveVectorErrors,"gridSuffix=s"=>\$gridSuffix,\
            "a01=f{1,}"=>\@a01,"a11=f{1,}"=>\@a11,"b01=f{1,}"=>\@b01,"b11=f{1,}"=>\@b11,\
            "a02=f{1,}"=>\@a02,"a12=f{1,}"=>\@a12,"b02=f{1,}"=>\@b02,"b12=f{1,}"=>\@b12,\
            "interfacePoint=f{1,}"=>\@interfacePoint,"interfaceNormal=f{1,}"=>\@interfaceNormal,\
	    "matFile=s"=>\$matFile,"matFile1=s"=>\$matFile1,"matFile2=s"=>\$matFile2,\
            "numMatRegions=i"=>\$numMatRegions,"regionFile=s"=>\$regionFile,\
            "xa=f"=>\$xa,"xb=f"=>\$xb,"ya=f"=>\$ya,"yb=f"=>\$yb,"za=f"=>\$za,"zb=f"=>\$zb,\
	    "solveForAllFields=i"=>\$solveForAllFields, "dispersionOption=s"=>\$dispersionOption,\
            "ts=s"=>\$ts,"nm=s"=>\$nm,"degreex=i"=>\$degreex,"degreet=i"=>\$degreet );
# ------------------------ plane material interface ------------------------------------------
$name=$option; 
if( $ic eq "isw" ){ $name = $option . "SurfaceWave"; }
# -- BAMX uses a different command file ----
if( $method eq "bamx" ){\
$cmdFile="baInterface.cmd"; $cmdDir="$ENV{CG}/mx/runs/ba"; \
}
if( $cg =~ /^twoBox.*/ || $cg =~ /^doubleBox.*/ ){ $numberOfDimensions=3; }
# Give defaults here for array arguments: 
if( $alphaP[0] eq "" ){ @alphaP=(-1,-1); }
if( $interfaceNormal[0] eq "" ){ @interfaceNormal=(1,0,0); }
if( $interfacePoint[0] eq "" ){ @interfacePoint=(0,0,0); }
if( $npv[0] eq "" ){ @npv=(0,0); }
#
if( $npv[0] eq "" ){ @npv=(1,1); }
if( $a01[0] eq "" ){ @a01=(1,0,0,0); }
if( $a11[0] eq "" ){ @a11=(.5,0,0,0); }
if( $b01[0] eq "" ){ @b01=(.4,0,0,0); }
if( $b11[0] eq "" ){ @b11=(.3,0,0,0); }
#
if( $a02[0] eq "" ){ @a02=(.9,0,0,0); }
if( $a12[0] eq "" ){ @a12=(.7,0,0,0); }
if( $b02[0] eq "" ){ @b02=(.3,0,0,0); }
if( $b12[0] eq "" ){ @b12=(.1,0,0,0); }
#
# -- caseName : used to label run-time output files 
#
$caseName="$name$method$cg\Order$order";
if( $method eq "bamx" ){ $caseName="$name$method" . "$cg" . "$ts" . "Order$order"; }
$extraLabel ="";
if( $dm ne "none" ($method ne "bamx") ){ $extraLabel .= "GDMNp" . "$npv[0]" . "Np" . "$npv[1]"; }
#
# if( $method eq "bamx" ){ $matFileName="$matFile"; $matFileName =~ s/\.txt//; $extraLabel .= "$matFileName"; }
if( $method eq "bamx" ){ $matFileName="$matFile" . "$matFile2"; $matFileName =~ s/\.txt//g; $extraLabel .= "$matFileName"; }
# if( $method eq "bamx" ){ $extraLabel .= "$matFile"; }
# 
if( $modeGDM > -1 ){ $extraLabel .= "Mode$modeGDM"; }
$caseName.= $extraLabel;
# 
if( $errorNorm eq 0 ){ $normName = "max"; }elsif( $errorNorm eq 1 ){ $normName = "L1";}\
   elsif( $errorNorm eq 2 ){ $normName = "L2"; }else{ $normName="UnknownNorm"; }
$caseName .= $normName . "Norm";
#
# -- outputFile : name for output TeX file: 
# 
$outputFile="$name$method$cg$extraLabel" . "Order$order" . $normName . "NormConvTable.tex"; 
if( $method eq "bamx" ){ $outputFile="$name$method$cg$extraLabel" . "$ts" . "Order$order" . $normName . "NormConvTable.tex"; }
#
$numberOfComponents=5;
if( $method eq "sosup" ){ $numberOfComponents=8; }
# define the table heading and caption
if( $numberOfComponents eq 5 && $numberOfDimensions eq 2 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$   \& \$H_z\$  \&  \$\\Ev\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 8  && $numberOfDimensions eq 2 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$   \& \$H_z\$   \&  \$\\Ev\$ \&  \$Ex_t\$ \&  \$Ey_t\$ \& \$Hz_t\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 5 && $numberOfDimensions eq 3 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$ \& \$E_z\$    \&  \$\\Ev\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 8  && $numberOfDimensions eq 3 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$ \& \$E_z\$ \&    \&   \$\\Ev\$ \$Ex_t\$ \&  \$Ey_t\$ \& \$Ez_t\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#  -- Dispersive model 2D ---
if( $numberOfComponents eq 5 && $numberOfDimensions eq 2 && $dm ne "none" )\
  { $numberOfComponents=6; $title= "grid  \&  N  \&    \$E_x\$   \&    \$E_y\$    \&    \$H_z\$    \&   \$\\Ev\$   \&    \$|\\Pv|\$   \&    \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#  -- Dispersive model 3D ---
if( $numberOfComponents eq 5 && $numberOfDimensions eq 3 && $dm ne "none" )\
  { $numberOfComponents=6; $title= "grid  \&  N  \&    \$E_x\$   \&    \$E_y\$    \&    \$E_z\$    \&   \$\\Ev\$   \&    \$|\\Pv|\$   \&    \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
# 
# BA-MAXWELL
if( $method eq "bamx" && $solveForAllFields eq 1  &&  $dm eq "none" )\
  { $title= "grid  \& N \&b/  \$E_x\$ \&  \$E_y\$ \& \$E_z\$ \&  \$H_x\$ \&  \$H_y\$ \& \$H_z\$  \&   \$\\Ev\$ \&   \$\\Hv\$  \&  \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; $numberOfComponents=9; }
#
if( $method eq "bamx" && $solveForAllFields eq 1  &&  $dm eq "gdm" )\
  { $title= "grid  \& N \&  \$E_x\$   \&  \$E_y\$     \& \$E_z\$    \&  \$H_x\$    \&  \$H_y\$    \& \$H_z\$   \&   \$\\Ev\$   \&   \$\\Hv\$   \&  \$\\Pv\$   \&  \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; $numberOfComponents=10; }
#
# BA-MAXWELL -- only display vector errors 
if( $method eq "bamx" && $solveForAllFields eq 1 &&  $dm eq "none" && $saveVectorErrors eq 1 )\
  { $title= "grid  \& N \&    \$\\Ev\$ \&   \$\\Hv\$ "; $numberOfComponents=9;  \
foreach $i (0,1,2,3,4,5,8) { $ignoreComponent[$i]=1; }\
}
# BA-GDM save all errors 
if( $method eq "bamx" && $solveForAllFields eq 1 && $dm eq "gdm" )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$     \& \$E_z\$     \&  \$H_x\$       \&  \$H_y\$      \& \$H_z\$      \&   \$\\Ev\$    \&   \$\\Hv\$    \&  \$\\Pv\$"; $numberOfComponents=9; \
 } \
  }
# BA-GDM : Save vector errors only 
if( $method eq "bamx" && $solveForAllFields eq 1 && $dm eq "gdm" && $saveVectorErrors eq 1 )\
  { $title= "grid  \& N \&  \$\\Ev\$    \&   \$\\Hv\$    \&  \$\\Pv\$"; $numberOfComponents=9;  \
  foreach $i (0,1,2,3,4,5) { $ignoreComponent[$i]=1; } \
  }
# 
$labelMethod=$method;
if( $method eq "NFDTD" ){ $labelMethod="CGFD$order"; }
if( $method eq "bamx" ){ $labelMethod="BAMX$order"; }
if( $method eq "NFDTD" ){ $caption= "\\caption\{Cgmx, $name, method=$labelMethod, $normName norm, order=\$$order\$, \$t=$tf\$, cfl=\$$cfl\$, diss=\$$diss\$, dissOrder=\$$dissOrder\$,  useSosupDissipation=$useSosupDissipation, interfaceIts=$interfaceIts, tz=$tz, degreex=$degreex degreet=$degreet kx=$kx, ky=$ky, kz=$kz ic=$ic, bc=$bc, dm=$dm, eps1=$eps1, eps2=$eps2, alphaP=$alphaP[0],$alphaP[1], npv=$npv[0],$npv[1], modeGDM=$modeGDM, a01=($a01[0],$a01[1],$a01[2]), a11=($a11[0],$a11[1],$a11[2]), b01=($b01[0],$b01[1],$b01[2]), b11=($b11[0],$b11[1],$b11[2]), a02=($a02[0],$a02[1],$a02[2]), a12=($a12[0],$a12[1],$a12[2]), b02=($b02[0],$b02[1],$b02[2]), b12=($b12[0],$b12[1],$b12[2]) matFile1=$matFile1 matFile2=$mathFile2 nm=$nm $date}\\label\{table:$name" . $method . "Order$order$normName}"; }
#
if( $method eq "bamx" ){ $caption= "\\caption\{Cgmx, $name, method=$labelMethod, ts=$ts, $normName norm, order=\$$order\$, \$t=$tf\$, cfl=\$$cfl\$, diss=\$$diss\$, tz=$tz, kx=$kx, ky=$ky, kz=$kz ic=$ic, bc=$bc, dm=$dm, modeGDM=$modeGDM, matFile=$matFile, matFile2=$matFile2, dispersionOption=$dispersionOption, xa=$xa xb=$xb ya=$ya yb=$yb za=$za zb=$zb $date}\\label\{table:$name" . $method . "Order$order$normName}"; }
#
# 
if( $method eq "NFDTD" ){ $options = "-diss=$diss -dissOrder=$dissOrder -dm=$dm  -eps1=$eps1 -eps2=$eps2 -cfl=$cfl -method=$method -errorNorm=$errorNorm -tf=$tf -tp=$tp -ic=$ic -tz=$tz -bc=$bc -alphaP=$alphaP[0] $alphaP[1] -npv=$npv[0] $npv[1] -modeGDM=$modeGDM -a01=$a01[0] $a01[1] $a01[2] -a11=$a11[0] $a11[1] $a11[2] -b01=$b01[0] $b01[1] $b01[2] -b11=$b11[0] $b11[1] $b11[2] -a02=$a02[0] $a02[1] $a02[2] -a12=$a12[0] $a12[1] $a12[2] -b02=$b02[0] $b02[1] $b02[2] -b12=$b12[0] $b12[1] $b12[2] -matFile1=$matFile1 -matFile2=$matFile2 -nm=$nm -kx=$kx -ky=$ky -kz=$kz -degreex=$degreex -degreet=$degreet -useSosupDissipation=$useSosupDissipation -cons=$cons -checkErrors=1 -interfaceIts=$interfaceIts -interfaceNormal=$interfaceNormal[0] $interfaceNormal[1] $interfaceNormal[2] -interfacePoint=$interfacePoint[0] $interfacePoint[1] $interfacePoint[2]  -go=go"; }
# bamx options: 
if( $method eq "bamx" ){  $options = "-diss=$diss -dissOrder=$dissOrder -method=bamx -dm=gdm -ts=$ts -matFile=$cmdDir/$matFile -matFile2=$cmdDir/$matFile2 -dm=$dm -solveForAllFields=$solveForAllFields -dispersionOption=$dispersionOption -cfl=$cfl -method=$method -errorNorm=$errorNorm -tf=$tf -tp=$tp -ic=$ic -tz=$tz -bc=$bc -npv=$npv[0] $npv[1] -modeGDM=$modeGDM -kx=$kx -ky=$ky -kz=$kz -checkErrors=1 -interfaceNormal=$interfaceNormal[0] $interfaceNormal[1] $interfaceNormal[2] -interfacePoint=$interfacePoint[0] $interfacePoint[1] $interfacePoint[2] -errorNorm=$errorNorm -xa=$xa -xb=$xb -ya=$ya -yb=$yb -za=$za -zb=$zb -go=go"; }
#
if( ($method eq "sosup" || $useSosupDissipation ne 0 || $method eq "bamx" ) && ($order eq 4) ){ $suffix=".ng3"; }
if( ($method eq "sosup" || $useSosupDissipation ne 0 || $method eq "bamx" ) && ($order eq 6) ){ $suffix=".ng4"; }
$grid1=$cg . "2";   $gName1 = $cg . "e2$gridSuffix.order$order$suffix"; 
$grid2=$cg . "4";   $gName2 = $cg . "e4$gridSuffix.order$order$suffix"; 
$grid3=$cg . "8";   $gName3 = $cg . "e8$gridSuffix.order$order$suffix"; 
$grid4=$cg . "16";  $gName4 = $cg . "e16$gridSuffix.order$order$suffix"; 
$grid5=$cg . "32";  $gName5 = $cg . "e32$gridSuffix.order$order$suffix"; 
$grid6=$cg . "64";  $gName6 = $cg . "e64$gridSuffix.order$order$suffix"; 
$grid7=$cg . "128";    $gName7 = $cg . "e128$gridSuffix.order$order$suffix"; 
$grid8=$cg . "256";    $gName8 = $cg . "e256$gridSuffix.order$order$suffix"; 
$grid9=$cg . "512";    $gName9 = $cg . "e512$gridSuffix.order$order$suffix"; 
$grid10=$cg . "1024";  $gName10= $cg . "e1024$gridSuffix.order$order$suffix"; 
# Special cases; 
if( $cg =~ /nonSquarenp/ ){\
$grid1=$cg . "1";   $gName1 = "nonSquare8np.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "nonSquare16np.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "nonSquare32np.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "nonSquare64np.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "nonSquare128np.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "nonSquare256np.order$order$suffix";\
}
# 
if( $ng > 0 ){ $grid=$grid1;  $res=1;   $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName1 $options";  }
if( $ng > 1 ){ $grid=$grid2;  $res=2;   $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName2 $options";}
if( $ng > 2 ){ $grid=$grid3;  $res=4;   $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName3 $options";}
if( $ng > 3 ){ $grid=$grid4;  $res=8;   $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName4 $options";}
if( $ng > 4 ){ $grid=$grid5;  $res=16;  $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName5 $options";}
if( $ng > 5 ){ $grid=$grid6;  $res=32;  $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName6 $options";}
if( $ng > 6 ){ $grid=$grid7;  $res=64;  $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName7 $options";}
if( $ng > 7 ){ $grid=$grid8;  $res=128; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName8 $options";}
if( $ng > 8 ){ $grid=$grid9;  $res=256; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName9 $options";}
if( $ng > 9 ){ $grid=$grid10; $res=512; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName10 $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit
