# Measure convergence rates for cgmx
#
# ==== CHIRPED PLANE WAVE ====
# -- second order
#   conv.p exact.conv -option=chirped -cg=nonSquare -tf=1. -tp=.1 -order=2 -ng=3
# -- fourth order
#
# -- sosup second order
# -- sosup fourth-order
# -- sosup sixth-order
#
$check="mx.check";
# --------options: 
#   -order : 2 or 4 
#   -interp = e or i if the grids were made with explicit or implicit interpolation
#   -ng : number of grids to use (i.e. how many times is the grid refined)
#   -errorNorm:  set to 1 or 2 to show L1 and L2 norm errors
# 
# Set default parameters: 
$cg="square"; $option="chirped"; 
$cmdFile="chirped.cmd"; 
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$cgmx = "$CGBUILDPREFIX/mx/bin/cgmx";  # command for cgmx
$cmdDir="$ENV{CG}/mx/cmd";  
$tf=.5; $tp=.1; $order = "2"; $ng=3; $m=2; $n=2; $interp="i"; $cfl=.9; $radius=.5; $bg="box";
$ts="me"; $matFile=""; $solveForAllFields=0;
$ta=1.; $tb=1.5; # for chirp 
$kx=1; $ky=0; $kz=0; $cons=0; 
$npv=1; $modeGDM=-1; 
$alphaP=1.; # $a0=1.; $a1=0.; $b0=0.; $b1=1.;  # GDM parameters
@a0 = (); @a1=(); @b0=(); @b1=(); # these must be null for GetOptions to work, defaults are given below 
$dm="none"; # dispersive model
$diss=.0; $dissOrder=-1; $drOption="computeFrequency"; # dispersion relation option 
$errorNorm=0; $method="NFDTD"; 
$alwaysCompute=1; $saveVectorErrors=0; 
$numberOfDimensions=2;
$nm="#"; # nonlinear model
$tz = "poly"; $degreex=2; $degreet=2; $fx=.5; $fy=$fx; $fz=$fx; $ft=$fx;
#
GetOptions( "name=s"=>\$name,"order=s"=>\$order,"ng=i"=>\$ng,"tf=f"=>\$tf,"interp=s"=>\$interp,"diss=f"=>\$diss,\
            "fixed=s"=>\$fixed,"cfl=f"=>\$cfl,"alwaysCompute=i"=>\$alwaysCompute,"method=s"=>\$method,"tp=f"=>\$tp,\
            "errorNorm=i"=>\$errorNorm,"m=f"=>\$m,"n=f"=>\$n,"dissOrder=i"=>\$dissOrder,"cg=s"=>\$cg,\
            "radius=f"=>\$radius,"bg=s"=>\$bg,"option=s"=>\$option,"ta=f"=>\$ta,"tb=f"=>\$tb,"dm=s"=>\$dm,\
            "alphaP=f"=>\$alphaP,"a0=f"=>\$a0,"a1=f"=>\$a1,"b0=f"=>\$b0,"b1=f"=>\$b1,"saveVectorErrors=i"=>\$saveVectorErrors,\
            "kx=i"=>\$kx,"ky=i"=>\$ky,"kz=i"=>\$kz,"npv=i"=>\$npv,"modeGDM=i"=>\$modeGDM,\
            "a0=f{1,}"=>\@a0,"a1=f{1,}"=>\@a1,"b0=f{1,}"=>\@b0,"b1=f{1,}"=>\@b1,"cons=i"=>\$cons,\
            "ts=s"=>\$ts,"solveForAllFields=i"=>\$solveForAllFields,"matFile=s"=>\$matFile, "drOption=s"=>\$drOption,\
	    "nm=s"=>\$nm,"tz=s"=>\$tz,"degreex=i"=>\$degreex, "degreet=i"=>\$degreet,\
	    "fx=f"=>\$fx,"fy=f"=>\$fy,"fz=f"=>\$fz,"ft=f"=>\$ft );
# ------------------------ planeWave ------------------------------------------
$name=$option; 
if( $option eq "chirped" ){ $cmdFile="../runs/embeddedBody/chirped.cmd";  }
if( $option eq "planeWave" ){ $cmdFile="../runs/planeWave/planeWave.cmd";  }
if( $option eq "tz" ){ $cmdFile="../runs/tz/tz.cmd";  }
if( $cg =~ /nonSquarenp/ ){ $bg="square"; }
if( $cg =~ /nonSquare/ ){ $bg="square"; }
if( $cg =~ /nonBoxnpp/ ){ $bg="box"; }
if( $cg =~ /box*/ || $cg =~ /nonBox*/ || $cg =~ /unitBox*/ || $cg =~ /unitNonBox*/ || $cg =~ /refineBox*/ || $cg =~ /refineNonBox*/ ){ $numberOfDimensions=3; }
# Give defaults here for array arguments: 
if( $a0[0] eq "" ){ @a0=(1,0,0,0); }
if( $a1[0] eq "" ){ @a1=(0,0,0,0); }
if( $b0[0] eq "" ){ @b0=(0,0,0,0); }
if( $b1[0] eq "" ){ @b1=(1,0,0,0); }
#
$extraLabel ="";
if( $dm ne "none" && ($method ne "bamx")  ){ $extraLabel .= "GDMNp$npv"; }
$matFileName=$matFile;
$matFileName =~ s/\.txt//; 
if( $dm ne "none" && ($method eq "bamx")  ){ $extraLabel .= "GDM"; }
if( $method eq "bamx" ){ $extraLabel .= $matFileName; }
if( $modeGDM > 0 ){ $extraLabel .= "Mode$modeGDM"; }
$outputFile="$name$method$cg$extraLabel" . "Order$order" . $normName . "NormConvTable.tex"; 
#
$caseName="$name$method$cg\Order$order";
if( $dm ne "none" ){ $caseName.="GDM"; }
if( $npv > 1 && ($method ne "bamx") ){ $caseName.="Np$npv"; }
if( $method eq "bamx" ){ $caseName .= $matFileName; }
if( $errorNorm eq 0 ){ $normName = "max"; }elsif( $errorNorm eq 1 ){ $normName = "L1";}\
   elsif( $errorNorm eq 2 ){ $normName = "L2"; }else{ $normName="UnknownNorm"; }
$caseName .= $normName . "Norm";
#
#
#
$numberOfComponents=5;
if( $method eq "sosup" ){ $numberOfComponents=8; }
# define the table heading and caption
if( $numberOfComponents eq 5 && $numberOfDimensions eq 2 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$   \& \$H_z\$  \&  \$\\Ev\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 8  && $numberOfDimensions eq 2 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$   \& \$H_z\$   \&  \$\\Ev\$ \&  \$Ex_t\$ \&  \$Ey_t\$ \& \$Hz_t\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 5 && $numberOfDimensions eq 3 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$ \& \$E_z\$    \&  \$\\Ev\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
if( $numberOfComponents eq 8  && $numberOfDimensions eq 3 )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$ \& \$E_z\$ \&    \&   \$\\Ev\$ \$Ex_t\$ \&  \$Ey_t\$ \& \$Ez_t\$ \& \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#  -- Dispersive model 2D ---
if( $numberOfComponents eq 5 && $numberOfDimensions eq 2 && $dm ne "none" )\
  { $numberOfComponents=6; $title= "grid  \&  N  \&    \$E_x\$   \&    \$E_y\$    \&    \$H_z\$    \&   \$\\Ev\$   \&    \$|\\Pv|\$   \&    \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#  -- Dispersive model 3D ---
if( $numberOfComponents eq 5 && $numberOfDimensions eq 3 && $dm ne "none" )\
  { $numberOfComponents=6; $title= "grid  \&  N  \&    \$E_x\$   \&    \$E_y\$    \&    \$E_z\$    \&   \$\\Ev\$   \&    \$|\\Pv|\$   \&    \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; }
#
# BA-MAXWELL
if( $method eq "bamx" && $solveForAllFields eq 1  &&  $dm eq "none" )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$ \& \$E_z\$ \&  \$H_x\$ \&  \$H_y\$ \& \$H_z\$  \&   \$\\Ev\$ \&   \$\\Hv\$  \&  \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; $numberOfComponents=9; }
#
if( $method eq "bamx" && $solveForAllFields eq 1  &&  $dm eq "gdm" )\
  { $title= "grid  \& N \&  \$E_x\$   \&  \$E_y\$     \& \$E_z\$    \&  \$H_x\$    \&  \$H_y\$    \& \$H_z\$   \&   \$\\Ev\$   \&   \$\\Hv\$   \&  \$\\Pv\$   \&  \$\\grad\\cdot\\Ev\/\\grad\\Ev\$"; $numberOfComponents=10; }
#
# BA-MAXWELL -- only display vector errors 
if( $method eq "bamx" && $solveForAllFields eq 1 &&  $dm eq "none" && $saveVectorErrors eq 1 )\
  { $title= "grid  \& N \&    \$\\Ev\$ \&   \$\\Hv\$ "; $numberOfComponents=9;  \
foreach $i (0,1,2,3,4,5,8) { $ignoreComponent[$i]=1; }\
}
# BA-GDM save all errors 
if( $method eq "bamx" && $solveForAllFields eq 1 && $dm eq "gdm" )\
  { $title= "grid  \& N \&  \$E_x\$ \&  \$E_y\$     \& \$E_z\$     \&  \$H_x\$       \&  \$H_y\$      \& \$H_z\$      \&   \$\\Ev\$    \&   \$\\Hv\$    \&  \$\\Pv\$"; $numberOfComponents=9; \
 } \
  }
# BA-GDM : Save vector errors only 
if( $method eq "bamx" && $solveForAllFields eq 1 && $dm eq "gdm" && $saveVectorErrors eq 1 )\
  { $title= "grid  \& N \&  \$\\Ev\$    \&   \$\\Hv\$    \&  \$\\Pv\$"; $numberOfComponents=9;  \
  foreach $i (0,1,2,3,4,5) { $ignoreComponent[$i]=1; } \
  }
# 
$labelMethod=$method;
if( $method eq "NFDTD" ){ $labelMethod="CGFD$order"; }
if( $method eq "bamx" ){ $labelMethod="BAMX$order"; }
$caption= "\\caption\{Cgmx, $name, method=$labelMethod, $normName norm, method=$method, ts=$ts, order=\$$order\$, \$t=$tf\$, cfl=\$$cfl\$, diss=\$$diss\$, dissOrder=\$$dissOrder\$, kx=$kx, ky=$ky, kz=$kz, cons=$cons, nm=$nm, dm=$dm, alphaP=$alphaP, npv=$npv, modeGDM=$modeGDM a0=($a0[0],$a0[1],$a0[2]), a1=($a1[0],$a1[1],$a1[2]), b0=($b0[0],$b0[1],$b0[2]), b1=($b1[0],$b1[1],$b1[2]) tz=$tz degreex=$degreex degreet=$degreet fx=$fx fy=$fy fz=$fz -ft=$ft $date}\\label\{table:$name" . $method . "Order$order$normName}"; 
if( $method eq "bamx" ){\
$caption= "\\caption\{Cgmx, $name, method=$labelMethod, $normName norm, method=$method, ts=$ts, order=\$$order\$, \$t=$tf\$, cfl=\$$cfl\$, diss=\$$diss\$, kx=$kx, ky=$ky, kz=$kz, dm=$dm, -matFile=$matFile -drOption=$drOption -solveForAllFields=$solveForAllFields $date}\\label\{table:$name" . $method . "Order$order$normName}"; \
}
#
# 
$options = "-diss=$diss -dissOrder=$dissOrder -ts=$ts -dm=$dm -radius=$radius -bg=$bg -cfl=$cfl -method=$method -errorNorm=$errorNorm -tf=$tf -tp=$tp -ta=$ta -tb=$tb -alphaP=$alphaP -npv=$npv -modeGDM=$modeGDM -a0=$a0[0] $a0[1] $a0[2] -a1=$a1[0] $a1[1] $a1[2] -b0=$b0[0] $b0[1] $b0[2] -b1=$b1[0] $b1[1] $b1[2] -kx=$kx -ky=$ky -kz=$kz -checkErrors=1 -matFile=$matFile -solveForAllFields=$solveForAllFields -drOption=$drOption -cons=0 -nm=$nm -tz=$tz -degreex=$degreex -degreet=$degreet -fx=$fx -fy=$fy -fz=$fz -ft=$ft -go=go";
#
$suffix="";
if( ($method eq "sosup") && ($order eq 4) ){ $suffix=".ng3"; }
if( ($method eq "sosup") && ($order eq 6) ){ $suffix=".ng4"; }
$grid1=$cg . "2";   $gName1 = $cg . "e2.order$order$suffix"; 
$grid2=$cg . "4";   $gName2 = $cg . "e4.order$order$suffix"; 
$grid3=$cg . "8";   $gName3 = $cg . "e8.order$order$suffix"; 
$grid4=$cg . "16";  $gName4 = $cg . "e16.order$order$suffix"; 
$grid5=$cg . "32";  $gName5 = $cg . "e32.order$order$suffix"; 
$grid6=$cg . "64";  $gName6 = $cg . "e64.order$order$suffix"; 
# Special cases; 
if( $cg =~ /nonSquarenp/ ){\
$grid1=$cg . "1";   $gName1 = "nonSquare8np.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "nonSquare16np.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "nonSquare32np.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "nonSquare64np.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "nonSquare128np.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "nonSquare256np.order$order$suffix";\
}
if( $cg =~ /nonBoxnpp/ ){\
$grid1=$cg . "1";   $gName1 = "nonBox2npp.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "nonBox4npp.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "nonBox8npp.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "nonBox16npp.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "nonBox32npp.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "nonBox64npp.order$order$suffix";\
}
if( $cg =~ /box/ ){\
$grid1=$cg . "1";   $gName1 = "box1.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "box2.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "box4.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "box8.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "box16.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "box32.order$order$suffix";\
}
if( $cg =~ /boxp/ ){\
$grid1=$cg . "1";   $gName1 = "box1p.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "box2p.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "box4p.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "box8p.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "box16p.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "box32p.order$order$suffix";\
}
if( $cg =~ /square/ ){\
$grid1=$cg . "8";   $gName1 = "square8.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "square16.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "square32.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "square64.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "square128.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "square256.order$order$suffix";\
}
if( $cg =~ /squarep/ ){\
$grid1=$cg . "8";   $gName1 = "square8p.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "square16p.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "square32p.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "square64p.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "square128p.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "square256p.order$order$suffix";\
}
if( $cg =~ /nonSquare/ ){\
$grid1=$cg . "8";   $gName1 = "nonSquare8.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "nonSquare16.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "nonSquare32.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "nonSquare64.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "nonSquare128.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "nonSquare256.order$order$suffix";\
}
if( $cg =~ /nonSquarep/ ){\
$grid1=$cg . "8";   $gName1 = "nonSquare8p.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "nonSquare16p.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "nonSquare32p.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "nonSquare64p.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "nonSquare128p.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "nonSquare256p.order$order$suffix";\
}
# 
if( $ng > 0 ){ $grid=$grid1; $res=1; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName1 $options";  }
if( $ng > 1 ){ $grid=$grid2; $res=2; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName2 $options";}
if( $ng > 2 ){ $grid=$grid3; $res=4; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName3 $options";}
if( $ng > 3 ){ $grid=$grid4; $res=8; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName4 $options";}
if( $ng > 4 ){ $grid=$grid5; $res=16; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName5 $options";}
if( $ng > 5 ){ $grid=$grid6; $res=32; $cmd="$cgmx -noplot $cmdDir/$cmdFile -g=$gName6 $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit
