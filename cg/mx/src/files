#  
#  Cgmx files to compile
#   Use:  setenv COMPILE [dbg/opt/optdbg]
#

buildHigherOrder = off
# buildHigherOrder = on

# C++ source files:
SRC_FILES += Maxwell.C MxParameters.C userDefinedInitialConditions.C userDefinedForcing.C  \
     advance.C setup.C setupGridFunctions.C solve.C plot.C advanceUnstructured.C \
     advanceStructured.C assignBoundaryConditions.C  \
     updateShowFile.C saveShow.C variableDissipation.C  assignInterfaceBoundaryConditions.C \
     DSICoeff.C checkGridFunction.C getEnergy.C InterfaceInfo.C project.C   \
     advanceFDTD.C defineRegionsAndBodies.C outputHeader.C advanceSOSUP.C \
     userDefinedKnownSolution.C assignUserDefinedKnownSolutionInitialConditions.C \
     printTimeStepInfo.C DispersiveMaterialParameters.C userDefinedProbe.C ReferenceSolution.C SphereExactSolutions.C \
     PlaneInterfaceExactSolution.C advanceBAMX.C defineMaterialRegion.C BAMaterialFunctions.C BAPlaneInterface.C \
     buildSuperGrid.C SurfaceWaveExactSolution.C computeTimeStep.C SlabsExactSolution.C ComplexArray.C \
     NonlinearExactSolution.C CheckParallel.C getAugmentedSolution.C InterfaceMaxwell.C

# Include Kyle's dbase functions with cgmx
# SRC_FILES += dbAccess.C dbFunctions.f kk_ptr.cc

# C++ source files to be compiled optimized by default
CSRCO += forcing.C divergence.C getInitialConditions.C getErrors.C computeIntensity.C getNorms.C FourierTransform.C

# advMxFiles: (always compile opt)
# NOTE: gcc 4.4.7 has trouble with -O3 and advMx3dOrder4r.f
FSRCO +=advOpt.f advOptNew.f \
        advMx2dOrder2r.f advMx3dOrder2r.f advMx2dOrder4r.f advMx3dOrder4r.f \
        advMx2dOrder2c.f advMx3dOrder2c.f advMx2dOrder4c.f advMx3dOrder4c.f 

# New version with upwind-dissipation 
FSRCO +=advMxUp.f  \
        advMxUp2dOrder2r.f advMxUp3dOrder2r.f advMxUp2dOrder4r.f advMxUp3dOrder4r.f \
        advMxUp2dOrder2c.f advMxUp3dOrder2c.f advMxUp2dOrder4c.f advMxUp3dOrder4c.f 

# BA Maxwell 
FSRCO +=advBA.f  \
        advBA2dOrder2r.f advBA2dOrder4r.f advBA3dOrder2r.f advBA3dOrder4r.f 

FSRCO +=getDiv.f  \
        getDiv2dOrder2r.f getDiv2dOrder4r.f getDiv3dOrder2r.f getDiv3dOrder4r.f \
        getDiv2dOrder2c.f getDiv2dOrder4c.f getDiv3dOrder2c.f getDiv3dOrder4c.f 

# SOSUP files:
FSRCO += advSOSUP.f \
         advMxSOSUP2dOrder2r.f advMxSOSUP2dOrder2c.f \
         advMxSOSUP2dOrder4r.f advMxSOSUP2dOrder4c.f \
         advMxSOSUP3dOrder2r.f advMxSOSUP3dOrder2c.f \
         advMxSOSUP3dOrder4r.f advMxSOSUP3dOrder4c.f \
  	 duWaveGen2d2rcOLD.f duWaveGen2d2ccOLD.f \
         duStepWaveGen2d2rc_tzOLD.f duStepWaveGen2d2cc_tzOLD.f \
	 duWaveGen2d4ccOLD.f duStepWaveGen2d4ccOLD.f duStepWaveGen2d4cc_tzOLD.f \
	 duWaveGen2d4rcOLD.f duStepWaveGen2d4rcOLD.f duStepWaveGen2d4rc_tzOLD.f \
	 duWaveGen2d2rc.f duStepWaveGen2d2rc.f duStepWaveGen2d2rc_tz.f \
	 duWaveGen2d2cc.f duStepWaveGen2d2cc.f duStepWaveGen2d2cc_tz.f \
	 duWaveGen2d4rc.f duStepWaveGen2d4rc.f duStepWaveGen2d4rc_tz.f \
	 duWaveGen2d4cc.f duStepWaveGen2d4cc.f duStepWaveGen2d4cc_tz.f \
         duWaveGen3d2rcOLD.f duStepWaveGen3d2rcOLD.f duStepWaveGen3d2rc_tzOLD.f \
 	 duWaveGen3d2ccOLD.f duStepWaveGen3d2ccOLD.f duStepWaveGen3d2cc_tzOLD.f \
         duWaveGen3d4rcOLD.f duStepWaveGen3d4rcOLD.f duStepWaveGen3d4rc_tzOLD.f \
 	 duWaveGen3d4ccOLD.f duStepWaveGen3d4ccOLD.f duStepWaveGen3d4cc_tzOLD.f \
   	 duWaveGen3d2rc.f duStepWaveGen3d2rc.f duStepWaveGen3d2rc_tz.f \
 	 duWaveGen3d2cc.f duStepWaveGen3d2cc.f duStepWaveGen3d2cc_tz.f \
	 duWaveGen3d4rc.f duStepWaveGen3d4rc.f duStepWaveGen3d4rc_tz.f \
 	 duWaveGen3d4cc.f duStepWaveGen3d4cc.f duStepWaveGen3d4cc_tz.f 

# Turn of sosup 6th order for now so we don't have to compile 
# FSRCO +=  advMxSOSUP3dOrder6r.f advMxSOSUP3dOrder6c.f \
# 	 advMxSOSUP2dOrder6r.f advMxSOSUP2dOrder6c.f \
# 	 duWaveGen2d6rc.f duStepWaveGen2d6rc.f duStepWaveGen2d6rc_tz.f \
#  	 duWaveGen2d6cc.f duStepWaveGen2d6cc.f duStepWaveGen2d6cc_tz.f \
#          duWaveGen2d6rcOLD.f duStepWaveGen2d6rcOLD.f duStepWaveGen2d6rc_tzOLD.f \
#  	 duWaveGen2d6ccOLD.f duStepWaveGen2d6ccOLD.f duStepWaveGen2d6cc_tzOLD.f \
#          duWaveGen3d6rcOLD.f duStepWaveGen3d6rcOLD.f duStepWaveGen3d6rc_tzOLD.f \
#  	 duWaveGen3d6ccOLD.f duStepWaveGen3d6ccOLD.f duStepWaveGen3d6cc_tzOLD.f \
#          duWaveGen3d6rc.f duStepWaveGen3d6rc.f duStepWaveGen3d6rc_tz.f \
#  	 duWaveGen3d6cc.f duStepWaveGen3d6cc.f duStepWaveGen3d6cc_tz.f


# bc files
FSRCO +=  bcOptMaxwell.f bcOptMaxwell2dOrder2.f bcOptMaxwell3dOrder2.f \
          bcOptMaxwell2dOrder4.f bcOptMaxwell3dOrder4.f cornersMxOrder2.f cornersMxOrder4.f evalDispersionRelation.f

# Replaced interface3d.f by interfaceOpt.f90 *wdh* Jan 26, 2021
FSRCO +=interface3d.f 
# Replaced interface3d.f by interfaceOpt3dOrder4.f90 *wdh* Jan 31, 2021
FSRCO += interface3dOrder4.f

# New interface routine -- testing for now
#   FINISH ME 
FNSRCO +=interfaceOpt.f90 \
         interfaceMx2dOrder2r.f90 interfaceMx2dOrder2c.f90 interfaceMx2dOrder4r.f90 interfaceMx2dOrder4c.f90 \
         interfaceMx3dOrder2c.f90 

# GDM versions 
FNSRCO += interfaceMxGDM2dOrder2r.f90 interfaceMxGDM2dOrder2c.f90 interfaceMxGDM2dOrder4r.f90 interfaceMxGDM2dOrder4c.f90 \
          interfaceMxGDM3dOrder2c.f90  

# MLA versions 
FNSRCO += interfaceMxMLA2dOrder2r.f90 interfaceMxMLA2dOrder2c.f90 interfaceMxMLA2dOrder4r.f90 interfaceMxMLA2dOrder4c.f90 \
          interfaceMxMLA3dOrder2c.f90 

# 3D order=4 versions 
FNSRCO +=interfaceOpt3dOrder4.f90  interfaceMx3dOrder4c.f90 interfaceMxGDM3dOrder4c.f90 interfaceMxMLA3dOrder4c.f90 


# misc. fortran files
FSRCO += abc.f pml.f dsimv.f lscoeff.f interfaceNew.f interfaceDerivatives.f \
         forcingOpt.f linpack.f scatCyl.f scatSphere.f rjbesl.f rybesl.f gamma.f nrbcUtil.f \
         bcSymmetry.f mxYee.f mxFilter.f mxProjectInterp.f advMxDiss.f bcAdjacent.f

# interface.f is too much for xlf, do not compile opt.
ifeq ($(FC),xlf)
 FSRC += interface.f
else
 FSRCO += interface.f
endif

# radiationFiles:
# SRC_FILES += RadiationKernel.C RadiationBoundaryCondition.C
CSRCO += RadiationKernel.C RadiationBoundaryCondition.C
FSRCO +=  radEval.f evalRadKernel.f 
# FSRC +=  radEval.f evalRadKernel.f 
# 3D versions:
FSRCO +=  dffti.f zffti.f dfftf.f zfftf.f zfftb.f dfftb.f 

# NOTE: These SHOULD BE COMPILE AUTO-DOUBLE !
FSRCO += gaussianIntegral.f bcperq21.f bcperq31.f amcof.f bccyl.f bcper3dq21.f 


# Optionally compile 6th and 8th order approximations (or null versions)
# order 6 and 8 BC's are implemented for rectangular grids:
FSRCO += bcOptMaxwell2dOrder6.f bcOptMaxwell3dOrder6.f cornersMxOrder6.f cornersMxOrder8.f
FSRCO += bcOptMaxwell2dOrder8.f bcOptMaxwell3dOrder8.f
ifeq ($(buildHigherOrder),on)
  FSRCO += advMx2dOrder6r.f advMx2dOrder8r.f advMx3dOrder6r.f advMx3dOrder8r.f
  FSRCO += advMx2dOrder6c.f advMx3dOrder6c.f \
           advMx2dOrder8c.f advMx3dOrder8c.f
else
  # just build empty versions that compile faster
  SRC_FILES += advMx2dOrder6rNull.f advMx2dOrder8rNull.f advMx3dOrder6rNull.f advMx3dOrder8rNull.f
  SRC_FILES += advMx2dOrder6cNull.f advMx3dOrder6cNull.f \
               advMx2dOrder8cNull.f advMx3dOrder8cNull.f
 # SRC_FILES += bcOptMaxwell2dOrder8Null.f bcOptMaxwell3dOrder8Null.f
endif

# this is the version for 1D Maxwell-Bloch solutions with 1 polarization and 2 atomic levels
# (it uses the variable D as N0-N1 instead of two level variables N0 and N1)
FNSRCO += mbe1d.f90 

# files that depend on bpp include files
forcing.C : src/forcing.h src/annulusEigenFunction.h src/planeMaterialInterface.h
plot.C : src/forcing.h

src/getInitialConditions.C : src/getInitialConditions.bC src/forcing.h src/annulusEigenFunction.h src/boxEigenFunction.h src/gaussianPulse.h src/polynomialTZ.h src/trigonometricTZ.h src/planeMaterialInterface.h src/dispersionMacros.h src/gaussianPlaneWaveMacros.h; $(BPP) -quiet -clean $<

src/assignBoundaryConditions.C : src/assignBoundaryConditions.bC src/forcing.h src/planeMaterialInterface.h src/annulusEigenFunction.h dispersionMacros.h gaussianPlaneWaveMacros.h; $(BPP) -quiet -clean $<

src/assignInterfaceBoundaryConditions.C : src/assignInterfaceBoundaryConditions.bC src/getLocalInterfaceArraysMacro.h ; $(BPP) -quiet -clean -I$(Overture)/include $<

src/getErrors.C : src/getErrors.bC src/forcing.h src/annulusEigenFunction.h src/boxEigenFunction.h src/planeMaterialInterface.h src/dispersionMacros.h src/gaussianPlaneWaveMacros.h; $(BPP) -quiet -clean $<

src/getAugmentedSolution.C : src/getAugmentedSolution.bC; $(BPP) -quiet -clean $<

src/getNorms.C : src/getNorms.bC; $(BPP) -quiet -clean $<

src/divergence.C : src/divergence.bC; $(BPP) -quiet -clean $<

src/defineMaterialRegion.C : src/defineMaterialRegion.bC; $(BPP) -quiet -clean $<

src/InterfaceMaxwell.C : src/InterfaceMaxwell.bC; $(BPP) -quiet -clean $<

src/SphereExactSolutions.C : src/SphereExactSolutions.bC; $(BPP) -quiet -clean $<

src/PlaneInterfaceExactSolution.C : src/PlaneInterfaceExactSolution.bC; $(BPP) -quiet -clean $<
src/BAPlaneInterface.C : src/BAPlaneInterface.bC; $(BPP) -quiet -clean $<

src/SlabsExactSolution.C : src/SlabsExactSolution.bC; $(BPP) -quiet -clean $<

src/SurfaceWaveExactSolution.C : src/SurfaceWaveExactSolution.bC; $(BPP) -quiet -clean $<

src/NonlinearExactSolution.C : src/NonlinearExactSolution.bC; $(BPP) -quiet -clean $<

src/trad.C : src/trad.bC; $(BPP) -quiet -clean $<

src/CheckParallel.C : src/CheckParallel.bC; $(BPP) -quiet -clean $<


src/evalDispersionRelation.f : src/evalDispersionRelation.bf; $(BPP) -quiet -clean $<

src/advanceStructured.C : src/advanceStructured.bC;  $(BPP) -quiet -clean -I$(Overture)/include $<

src/advanceBAMX.C : src/advanceBAMX.bC;  $(BPP) -quiet -clean -I$(Overture)/include $<

src/userDefinedKnownSolution.C : src/userDefinedKnownSolution.bC src/dispersivePlaneWaveInterface.h src/dispersivePlaneWaveInterface3d.h;  $(BPP) -quiet -clean -I$(Overture)/include $<

# we need to add these explicitly since the implicit rule for %.bf doesn't work for some reason (?)
# we need to do it this way so that all the files created with bpp are put in the src directory: 
src/advOpt.f: src/advOpt.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advOpt.bf
# TEMP new version for dispersive materials: 
src/advOptNew.f: src/advOptNew.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advOptNew.bf

src/advMx2dOrder2r.f : src/advOptNew.f
src/advMx3dOrder2r.f : src/advOptNew.f
src/advMx2dOrder4r.f : src/advOptNew.f
src/advMx3dOrder4r.f : src/advOptNew.f
src/advMx2dOrder6r.f : src/advOpt.f
src/advMx3dOrder6r.f : src/advOpt.f
src/advMx2dOrder8r.f : src/advOpt.f
src/advMx3dOrder8r.f : src/advOpt.f

src/advMx2dOrder2c.f : src/advOptNew.f
src/advMx3dOrder2c.f : src/advOptNew.f
src/advMx2dOrder4c.f : src/advOptNew.f
src/advMx3dOrder4c.f : src/advOptNew.f
src/advMx2dOrder6c.f : src/advOpt.f
src/advMx3dOrder6c.f : src/advOpt.f
src/advMx2dOrder8c.f : src/advOpt.f
src/advMx3dOrder8c.f : src/advOpt.f

src/advMx2dOrder6rNull.f : src/advOpt.f

# ---------- NEW version with upwind dissipation ----
src/advMxUp.f: src/advMxUp.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advMxUp.bf

src/advMxUp2dOrder2r.f : src/advMxUp.f
src/advMxUp2dOrder2r.f : src/advMxUp.f
src/advMxUp3dOrder2r.f : src/advMxUp.f
src/advMxUp2dOrder4r.f : src/advMxUp.f
src/advMxUp3dOrder4r.f : src/advMxUp.f

src/advMxUp2dOrder2c.f : src/advMxUp.f
src/advMxUp2dOrder2c.f : src/advMxUp.f
src/advMxUp3dOrder2c.f : src/advMxUp.f
src/advMxUp2dOrder4c.f : src/advMxUp.f
src/advMxUp3dOrder4c.f : src/advMxUp.f



# -------------- BA Maxwell ------------
src/advBA.f: src/advBA.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advBA.bf

src/advBA2dOrder2r.f : src/advBA.f             
src/advBA2dOrder4r.f : src/advBA.f             
src/advBA3dOrder2r.f : src/advBA.f             
src/advBA3dOrder4r.f : src/advBA.f             

# ------ optimized get divergence (BA version to start) --------------
src/getDiv.f: src/getDiv.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include getDiv.bf

src/getDiv2dOrder2r.f : src/getDiv.f             
src/getDiv2dOrder4r.f : src/getDiv.f             
src/getDiv3dOrder2r.f : src/getDiv.f             
src/getDiv3dOrder4r.f : src/getDiv.f             

src/getDiv2dOrder2c.f : src/getDiv.f             
src/getDiv2dOrder4c.f : src/getDiv.f             
src/getDiv3dOrder2c.f : src/getDiv.f             
src/getDiv3dOrder4c.f : src/getDiv.f             

# ----------- SOSUP -----
src/advSOSUP.f: src/advSOSUP.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advSOSUP.bf

src/advMxSOSUP2dOrder2r.f : src/advSOSUP.f
src/advMxSOSUP3dOrder2r.f : src/advSOSUP.f
src/advMxSOSUP2dOrder4r.f : src/advSOSUP.f
src/advMxSOSUP3dOrder4r.f : src/advSOSUP.f
src/advMxSOSUP2dOrder6r.f : src/advSOSUP.f
src/advMxSOSUP3dOrder6r.f : src/advSOSUP.f

src/advMxSOSUP2dOrder2c.f : src/advSOSUP.f
src/advMxSOSUP3dOrder2c.f : src/advSOSUP.f
src/advMxSOSUP2dOrder4c.f : src/advSOSUP.f
src/advMxSOSUP3dOrder4c.f : src/advSOSUP.f
src/advMxSOSUP2dOrder6c.f : src/advSOSUP.f
src/advMxSOSUP3dOrder6c.f : src/advSOSUP.f

src/advMxDiss.f: src/advMxDiss.bf 
	      @cd src; $(BPP) -clean -quiet -I$(Overture)/include advMxDiss.bf

src/bcMaxwellCorners.f: src/bcMaxwellCorners.bf src/bcOptMaxwellMacros.h src/jacobianDerivatives.h \
                        src/bcExtended3d4.h src/planeWave.h  src/chirpedPlaneWave.h src/dispersivePlaneWave.h \
                        src/bcDefineFortranInclude.h src/dispersionFortranInclude.h
			@cd src; $(BPP) -quiet -I$(Overture)/include -clean bcMaxwellCorners.bf

src/cornersMxOrder2.f : src/bcMaxwellCorners.f 
src/cornersMxOrder4.f : src/bcMaxwellCorners.f
src/cornersMxOrder6.f : src/bcMaxwellCorners.f
src/cornersMxOrder8.f : src/bcMaxwellCorners.f

src/bcOptMaxwell.f: src/bcOptMaxwell.bf src/bcOptMaxwellMacros.h src/jacobianDerivatives.h \
                    src/bcdivMaxwell.h src/planeWave.h src/chirpedPlaneWave.h src/dispersivePlaneWave.h \
                    src/bcDefineFortranInclude.h src/forcingDefineFortranInclude.h src/dispersionFortranInclude.h
		    @cd src; $(BPP) -clean -quiet -I$(Overture)/include bcOptMaxwell.bf

src/bcOptMaxwell2dOrder2.f : src/bcOptMaxwell.f

src/bcOptMaxwell4.f: src/bcOptMaxwellMacros.h src/jacobianDerivatives.h src/bcOptMaxwell4.bf \
                     src/bc4Maxwell.h src/bc4eMaxwell.h src/bcExtended4Maxwell.h src/bcdiv3dMaxwell.h \
                     src/bcHzExtended4Maxwell.h src/bc4Maxwell3d.h src/planeWave.h  src/chirpedPlaneWave.h \
                     src/dispersivePlaneWave.h \
                     src/bcDefineFortranInclude.h src/forcingDefineFortranInclude.h src/dispersionFortranInclude.h 
		     @cd src; $(BPP) -clean -quiet -I$(Overture)/include bcOptMaxwell4.bf

src/bcOptMaxwell2dOrder4.f : src/bcOptMaxwell.f src/bcOptMaxwell4.f
src/bcOptMaxwell3dOrder4.f : src/bcOptMaxwell.f src/bcOptMaxwell4.f

src/mxYee.f: src/mxYee.bf src/bcDefineFortranInclude.h src/icDefineFortranInclude.h src/planeWave.h src/planeMaterialInterface.h
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include mxYee.bf

src/mxFilter.f: src/mxFilter.bf 
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include mxFilter.bf

src/mxProjectInterp.f: src/mxProjectInterp.bf src/bcDefineFortranInclude.h
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include mxProjectInterp.bf


src/abc.f: src/abc.bf src/bcDefineFortranInclude.h 
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include abc.bf

src/pml.f: src/pml.bf src/pml.h src/bcDefineFortranInclude.h 
	   @cd src; $(BPP)  -clean -quiet -I$(Overture)/include pml.bf

src/bcSymmetry.f: src/bcSymmetry.bf src/bcDefineFortranInclude.h 
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include bcSymmetry.bf

src/bcAdjacent.f: src/bcAdjacent.bf src/bcDefineFortranInclude.h 
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include bcAdjacent.bf

src/interface.f: src/interface.bf src/bcDefineFortranInclude.h 
		 @cd src; $(BPP) -clean -quiet -I$(Overture)/include interface.bf

#
# -- *NEW* interface routine that generates multiple files, *wdh*  Jan 2021 
# 
src/interfaceOpt.f90: src/interfaceOpt.bf90 src/bcDefineFortranInclude.h src/interfaceMacros.h src/dispersiveInterfaceMacros.h  src/dispersiveInterfaceMacros2d.h src/nonlinearInterfaceMacros24r.h src/nonlinearInterfaceMacros.h src/interfaceAdeGdmOrder2.h src/interfaceAdeGdmOrder4.h src/interfaceMacros3d.h src/saveStencilMacros.h
		 @cd src; $(BPP) -clean -quiet -I$(Overture)/include interfaceOpt.bf90

src/interfaceOpt3dOrder4.f90: src/interfaceOpt3dOrder4.bf90 src/bcDefineFortranInclude.h src/interfaceMacros.h src/dispersiveInterfaceMacros.h src/nonlinearInterfaceMacros.h src/nonlinearInterfaceMacros34c.h src/interfaceAdeGdmOrder2.h src/interfaceAdeGdmOrder4.h src/interfaceMacros3d.h src/saveStencilMacros.h
		 @cd src; $(BPP) -clean -quiet -I$(Overture)/include interfaceOpt3dOrder4.bf90

# ------------ new interface files -------
src/interfaceMx2dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMx2dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMx2dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMx2dOrder4c.f90 : src/interfaceOpt.f90
src/interfaceMx3dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMx3dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMx3dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMx3dOrder4c.f90 : src/interfaceOpt.f90


# --- GDM interface files 
src/interfaceMxGDM2dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMxGDM2dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMxGDM2dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMxGDM2dOrder4c.f90 : src/interfaceOpt.f90
src/interfaceMxGDM3dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMxGDM3dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMxGDM3dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMxGDM3dOrder4c.f90 : src/interfaceOpt.f90


# --- MLA interface files 
src/interfaceMxMLA2dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMxMLA2dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMxMLA2dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMxMLA2dOrder4c.f90 : src/interfaceOpt.f90
src/interfaceMxMLA3dOrder2r.f90 : src/interfaceOpt.f90
src/interfaceMxMLA3dOrder2c.f90 : src/interfaceOpt.f90
src/interfaceMxMLA3dOrder4r.f90 : src/interfaceOpt.f90
src/interfaceMxMLA3dOrder4c.f90 : src/interfaceOpt.f90

 
# TURN-OFF: replaced
## src/interface3d.f: src/interface3d.bf src/bcDefineFortranInclude.h src/interfaceMacros.h src/dispersiveInterfaceMacros.h src/nonlinearInterfaceMacros.h src/interfaceAdeGdmOrder2.h src/interfaceAdeGdmOrder4.h src/interfaceMacros3d.h; @cd src; $(BPP) -clean -quiet -I$(Overture)/include interface3d.bf

# TURN-OFF: replaced
## src/interface3dOrder4.f: src/interface3dOrder4.bf src/bcDefineFortranInclude.h src/interfaceMacros.h src/dispersiveInterfaceMacros.h src/nonlinearInterfaceMacros.h src/interfaceMacros3d.h;  @cd src; $(BPP) -clean -quiet -I$(Overture)/include interface3dOrder4.bf

# this next file creates the files evaluateJacobianDerivativesOrder6.h, evaluateCoefficientsOrder6.h and
src/interfaceMacros.f: src/interfaceMacros.bf; 
		       @cd src; $(BPP) -clean -quiet -I$(Overture)/include interfaceMacros.bf

src/evaluateJacobianDerivativesOrder6.h : src/interfaceMacros.f
src/evaluateEquationsOrder6.h : src/interfaceMacros.f
src/evaluateCoefficientsOrder6.h : src/interfaceMacros.f
src/declareTemporaryVariablesOrder6.h : src/interfaceMacros.f

src/interfaceNew.f: src/interfaceNew.bf src/bcDefineFortranInclude.h src/interfaceMacros.bf
		    @cd src; $(BPP) -clean -quiet -I$(Overture)/include interfaceNew.bf

src/interfaceDerivatives.f: src/interfaceDerivatives.bf src/bcDefineFortranInclude.h \
                            src/evaluateJacobianDerivativesOrder6.h 
			    @cd src; $(BPP) -clean -quiet -I$(Overture)/include interfaceDerivatives.bf

src/forcing.C : src/forcing.bC forcing.h annulusEigenFunction.h; $(BPP) -quiet -clean $<

src/forcingOpt.f: src/forcingOpt.bf
		   @cd src; $(BPP)  -clean -quiet -I$(Overture)/include forcingOpt.bf

src/scatCyl.f: src/scatCyl.bf; 
	       @cd src; $(BPP)  -clean -quiet -I$(Overture)/include scatCyl.bf

src/scatSphere.f: src/scatSphere.bf
		  @cd src; $(BPP)  -clean -quiet -I$(Overture)/include scatSphere.bf

# evaluate the radiation BC's
src/radEval.f: src/radEval.bf
	       @cd src; $(BPP) -clean -quiet -I$(Overture)/include radEval.bf

src/evalRadKernel.f: src/evalRadKernel.bf
	       @cd src; $(BPP) -clean -quiet -I$(Overture)/include evalRadKernel.bf

src/nrbcUtil.f: src/nrbcUtil.bf  src/planeWave.h src/gaussianPlaneWaveMacros.h
	   @cd src; $(BPP) -clean -quiet -I$(Overture)/include nrbcUtil.bf

#$(OBJ)/duWaveGen2d6rc.o: duWaveGen2d6rc.f sixthOrderRectangular2D.h
#	$(FC) $(FC_FLAGS_REQ) $(FC_FLAGS_OPT) $(FORTRAN_INCLUDES) -o $@ -c duWaveGen2d6rc.f
