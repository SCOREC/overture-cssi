# 
# ---- Convergence rates for INCOMPRESSIBLE elasticity ---
#
# To run the convergence tests type:
#  
# SOS: 
#      conv.p incompressible.conv -known=annulus -icase=3  -tf=.3 -tp=.3 -ng=2
# 
# --------options: 
#   -known=[annulus|disk]
#    
#   -en : error norm: max, l1, l2
#   -ng : number of grids to use (i.e. how many times is the grid refined)
# 
# Set default parameters: 
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$cgsm = "$CGBUILDPREFIX/sm/bin/cgsm";  # command for cgsm
$cmdDir="$ENV{CG}/sm/runs/surfaceWave"; 
# 
$known="annulus"; $nd=2; $cg=""; 
$icase=1; $mode=1; $n=1; $m=1; # Jn( lambda_mn r )
$mx=2; $my=1; $mz=1; # mode for periodic strip 
$bc1="d"; $bc2="d"; $bc3="d"; $bc4="d"; # displacement BC
$bc=""; # set default BC
$upwindSOS=1; 
$pv = "nc";  $en="max"; $ng=5; $cdv=1.; $ts="me"; $alwaysCompute=1; $mu=1.; $cfl=.9; 
$tf=.5;  $tp=.1;
$showAllComponents=0;  # set to 1 to include all components in the table.
$useCurlCurl=1; 
$knownCaseName = "hollowCylinderDD"; 
$psolver="yale"; $rtolp=1.e-5; $atolp=1.e-6;  # For the pressure solve
#
GetOptions("pv=s"=>\$pv,"en=s"=>\$en,"mode=i"=>\$mode,"ng=i"=>\$ng,"bcn=s"=>\$bcn,"bc=s"=>\$bc,"ts=s"=>\$ts,"cdv=f"=>\$cdv,\
           "alwaysCompute=i"=>\$alwaysCompute,"mu=f"=>\$mu,"icase=i"=>\$icase,"n=i"=>\$n,"m=i"=>\$m,\
           "showAllComponents=i"=>\$showAllComponents,"known=s"=>\$known,"knownCaseName=s"=>\$knownCaseName,"cylCaseName=s"=>\$knownCaseName,\
           "cfl=f"=>\$cfl,"upwindSOS=i"=>\$upwindSOS,"useCurlCurl=i"=>\$useCurlCurl,"tf=f"=>\$tf,"tp=f"=>\$tp,\
           "rtolp=f"=>\$rtolp,"atolp=f"=>\$atolp,"cg=s"=>\$cg,"stripCaseName=s"=>\$stripCaseName,"mx=i"=>\$mx,"my=i"=>\$my,"mz=i"=>\$mz );
# set default BC
if( $bc ne "" ){ $bc1=$bc; $bc2=$bc; $bc3=$bc; $bc4=$bc; } \
#
# Solid sphere known solution
#
if( $known eq "solidSphere" ){ \
      $cmdFile="$ENV{CG}/sm/runs/knownIncompressible/knownIncompressible.cmd"; \
      $nd=3;\
      $psolver = "best";\
      if( $cg eq "" ){ $gridPrefix = "spheree"; }else{ $gridPrefix=$cg; };\
      $shortName="solidSphere"; \
      if( $knownCaseName eq "solidSphereD" ){ $bc1="d"; $bc2="d"; $bc3="d"; $bc4="d"; } \
      if( $knownCaseName eq "solidSphereT" ){ $bc1="t"; $bc2="t"; $bc3="t"; $bc4="t"; } \
      $caseLabel = "Case" . ucfirst($knownCaseName);  \
    } 
#   
# -- hollow cylinder known solution ---
if( $known eq "hollowCyl" ){ \
      $cmdFile="$ENV{CG}/sm/runs/knownIncompressible/knownIncompressible.cmd"; \
      $psolver = "best";\
      $gridPrefix = "cylinder";\
      $shortName="hollowCyl"; \
      if( $knownCaseName eq "hollowCylinderDD" ){ $bc3="d"; $bc4="d"; } \
      if( $knownCaseName eq "hollowCylinderTT" ){ $bc3="t"; $bc4="t"; } \
      $caseLabel = "Case" . ucfirst($knownCaseName);  \
    }
if( $known eq "solidCyl" ){ \
      $cmdFile="$ENV{CG}/sm/runs/knownIncompressible/knownIncompressible.cmd"; \
      $nd=3;\
      $psolver = "best";\
      $gridPrefix = "pipezFixede";\
      $shortName="solidCyl"; \
      if( $knownCaseName eq "solidCylinderD" ){ $bc3="d"; $bc4="d"; } \
      if( $knownCaseName eq "solidCylinderT" ){ $bc3="t"; $bc4="t"; } \
      $caseLabel = "Case" . ucfirst($knownCaseName);  \
    }    
# -- periodic strip known solutions ---
if( $known eq "strip" ){ \
      $cmdFile="$cmdDir/surfaceWave.cmd"; \
      $gridPrefix = "../surfaceWave/stripTractionTractionGrid"; \
      $shortName="strip"; \
      if( $knownCaseName eq "rectangleDD" ){ $bc1="d"; $bc2="d"; } \
      if( $knownCaseName eq "rectangleTD" ){ $bc1="t"; $bc2="d"; } \
      if( $knownCaseName eq "rectangleTT" ){ $bc1="t"; $bc2="t"; } \
      $caseLabel = "Case" . ucfirst($knownCaseName) . "BC$bc1$bc2" . "ModeMx$mx" . "My$my";  \
    }
# if( $known eq "strip" ){ \
#       $cmdFile="$cmdDir/surfaceWave.cmd"; \
#       if( $icase eq "1" ){ $gridPrefix = "../surfaceWave/case1Grid";}\
#       if( $icase eq "2" || $icase eq "5" ){ $gridPrefix = "../surfaceWave/stripTractionTractionGrid";}\
#       $shortName="strip"; \
#       if( $icase eq "1" || $icase eq "5" ){ $bc1="t"; $bc2="d"; } \
#       if( $icase eq "2" ){ $bc1="t"; $bc2="t"; } \
#       if( $icase eq "3" ){ $bc1="t"; $bc2="t"; } \
#       $caseLabel = "Case$icase" . "BC$bc1$bc2" . "Moden$n" . "m$m";  \
#     }    
# -- periodic 3d strip known solutions ---
if( $known eq "strip3d" ){ \
      $cmdFile="$cmdDir/surfaceWave.cmd"; \
      $psolver = "best"; \
      if( $icase eq "1" ){ $gridPrefix = "../surfaceWave/stripTractionTractionGrid3d";}\
      if( $icase eq "2" ){ $gridPrefix = "../surfaceWave/stripTractionTractionGrid3d";}\
      $shortName="strip3d"; \
      if( $icase eq "1" ){ $bc1="t"; $bc2="d"; } \
      if( $icase eq "2" ){ $bc1="t"; $bc2="t"; } \
      if( $icase eq "3" ){ $bc1="t"; $bc2="t"; } \
      $caseLabel = "Case$icase" . "BC$bc1$bc2" . "Moden$n" . "m$m";  \
    }    
# -- annulus known solutions ---
if( $known eq "annulus" ){ \
      $cmdFile="$cmdDir/surfaceWave.cmd"; $shortName="an";  \
      $gridPrefix="annulus"; \
      if( $icase eq "1" ){ $bc1="d"; $bc2="d"; } \
      if( $icase eq "2" ){ $bc1="t"; $bc2="d"; } \
      if( $icase eq "3" ){ $bc1="t"; $bc2="t"; } \
      $caseLabel = "Case$icase" . "BC$bc1$bc2". "Moden$n" . "m$m";  \
    }
# -- disk known solutions ---
if( $known eq "disk" ){ \
      $cmdFile="$cmdDir/surfaceWave.cmd";  $shortName="disk"; \
      $gridPrefix="sicFixede"; \
      if( $icase eq "1" ){ $bc1="d"; $bc2="d"; } \
      if( $icase eq "2" ){ $bc1="t"; $bc2="t"; } \
      $caseLabel = "Case$icase" . "BC$bc1". "Moden$n" . "m$m";  \
    }    
$check="sm.check";
# 
$caseName=$known . "IncompressibleElasticity" . "TS$ts" . $caseLabel;
$name=$caseName;
# if( $pv eq "nc" || $pv eq "c" ){ $numberOfComponents = 2; }
# if( $pv eq "g" ){ $numberOfComponents = 8; }
if( $pv eq "h" ){ $numberOfComponents = 11; }
if( $ts eq "me" ){ $ts = "modifiedEquationTimeStepping"; }
if( $ts eq "fe" ){ $ts = "forwardEuler"; }
if( $ts eq "ie" ){ $ts = "improvedEuler"; }
if( $ts eq "ab" ){ $ts = "adamsBashforth2"; }
#
#
# --- define the table heading and caption --
# 
if( $nd==2 ){\
  $numberOfComponents = 4; \
  $title ="grid  \& N \& \$\\|\\uv\\|\$ \& \$u_1\$ \&  \$u_2\$ \& \$p\$  ";\
  @componentName = ( "uv", "u1", "u2", "p" );\
  }\
else{\
  $numberOfComponents = 5; \
  $title ="grid  \& N \& \$\\|\\uv\\|\$ \& \$u_1\$ \&  \$u_2\$ \&  \$u_3\$  \& \$p\$  ";\
  @componentName = ( "uv", "u1", "u2", "u3", "p" ); \
  }
# 
if( $known eq "strip" ){ \
  $caption= "\\caption\{SM-ILE, $name, ts=$ts, caseName=$knownCaseName, mx=$mx, my=$my, mz=$mz, -known=$known, \$t=$tf\$, cfl=$cfl, bc1=$bc1, bc2=$bc2, upwindSOS=$upwindSOS, cdv=$cdv, useCurlCurl=$useCurlCurl $date}\\label\{table:$name}"; \
else{ \
  $caption= "\\caption\{SM-ILE, $name, ts=$ts, caseName=$knownCaseName, mx=$mx, my=$my, mz=$mz, icase=$icase, n=$n, m=$m, -known=$known, \$t=$tf\$, cfl=$cfl, bc1=$bc1, bc2=$bc2, upwindSOS=$upwindSOS, cdv=$cdv, useCurlCurl=$useCurlCurl $date}\\label\{table:$name}"; \
}
$outputFile="$name" . ".ConvTable.tex"; 
# 
$options = "-ts=$ts -tf=$tf -tp=$tp -cfl=$cfl -known=$known -icase=$icase -n=$n -m=$m -caseName=$knownCaseName -mx=$mx -my=$my -mz=$mz -bc1=$bc1 -bc2=$bc2 -bc3=$bc3 -bc4=$bc4 -cdv=$cdv -upwindSOS=$upwindSOS -useCurlCurl=$useCurlCurl -psolver=$psolver -rtolp=$rtolp -atolp=$atolp"; 
$gName1 = $gridPrefix . "2.order2";
$gName2 = $gridPrefix . "4.order2";
$gName3 = $gridPrefix . "8.order2";
$gName4 = $gridPrefix . "16.order2";
$gName5 = $gridPrefix . "32.order2";
$gName6 = $gridPrefix . "64.order2";
if( $known eq "solidSphere" ){\
  $gName0 = $gridPrefix . "1.order2";  \
  }
if( $known eq "strip" ){\
  $gName1 = $gridPrefix . "2np.order2";  \
  $gName2 = $gridPrefix . "4np.order2";  \
  $gName3 = $gridPrefix . "8np.order2";  \
  $gName4 = $gridPrefix . "16np.order2"; \
  $gName5 = $gridPrefix . "32np.order2"; \
  $gName6 = $gridPrefix . "64np.order2"; \
  }
if( $known eq "strip3d" ){\
  $gName1 = $gridPrefix .  "2npp.order2";  \
  $gName2 = $gridPrefix .  "4npp.order2";  \
  $gName3 = $gridPrefix .  "8npp.order2";  \
  $gName4 = $gridPrefix . "16npp.order2"; \
  $gName5 = $gridPrefix . "32npp.order2"; \
  $gName6 = $gridPrefix . "64npp.order2"; \
  }  
if( $known eq "hollowCyl" ){\
  $gName1 = $gridPrefix .  "2.order2p"; \
  $gName2 = $gridPrefix .  "4.order2p"; \
  $gName3 = $gridPrefix .  "8.order2p"; \
  $gName4 = $gridPrefix . "16.order2p"; \
  $gName5 = $gridPrefix . "32.order2p"; \
  $gName6 = $gridPrefix . "64.order2p"; \
  }
$res=1/2; 
# sphere starts at G1 
if( $known eq "solidSphere" ){ $ng=$ng-1; \
  $grid=$shortName ."1"; $res=1;   $cmd="$cgsm -noplot $cmdFile -g=$gName0 $options"; }
#
              $grid=$shortName ."2";  $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName1 $options";
if( $ng > 1 ){$grid=$shortName ."4";  $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName2 $options";}
if( $ng > 2 ){$grid=$shortName ."8";  $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName3 $options";}
if( $ng > 3 ){$grid=$shortName ."16"; $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName4 $options";}
if( $ng > 4 ){$grid=$shortName ."32"; $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName5 $options";}
if( $ng > 5 ){$grid=$shortName ."64"; $res=$res*2; $cmd="$cgsm -noplot $cmdFile -g=$gName6 $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit




