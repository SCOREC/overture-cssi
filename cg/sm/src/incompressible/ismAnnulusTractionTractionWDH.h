// ------------------------------------------------------------------------------------------------ 
//    AnnulusTracTracBCs: Exact solution for incompressible linear elasticity 
// Annulus of outer radius Rb=2, inner radius Ra = 1; r=1 Traction BC; r=2 Traction BC. 
// File Written by Disk_Annulus_ExactSoln.mw (maple) 
// Set C4 to scale the solution 
// ------------------------------------------------------------------------------------------------ 
Real rho,c,mu,omegaRoot,betaRoot,Pi,k,C1,C2,C3,ra,rb; 
ra=.5;
rb=1;
rho=1;
mu=1;
betaRoot=13.0093897361247308647679;
k=1;
C1 = 0.104222070006098753381362e2 * C4;
C2 = -0.432673264599913402038813e1 * C4;
C3 = -0.153360524625649062085361e0 * C4;
omegaRoot = betaRoot * sqrt(mu / rho);
Pi=3.14159265358979323846264;
#beginMacro annulusMacro(r,theta,t,ur,vr,pr)
  ur = 0.1e1 / r * jn(1, 0.130093897361247308647679e2 * r) * C4 * cos(t * omegaRoot) * cos(theta) + 0.1e1 / r * jn(1, 0.130093897361247308647679e2 * r) * C4 * sin(t * omegaRoot) * sin(theta) + 0.497519350531880418705242e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * mu * cos(t * omegaRoot) * cos(theta) + 0.497519350531880418705242e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * mu * sin(t * omegaRoot) * sin(theta) - 0.143113982384782921549911e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * cos(theta) - 0.143113982384782921549911e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * sin(theta) + 0.520639974058253950243800e3 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * cos(theta) + 0.520639974058253950243800e3 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * sin(theta) + 0.701497290712961400003724e2 / mu * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * cos(theta) + 0.701497290712961400003724e2 / mu * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * sin(theta) + 0.142309060522577509283130e4 * pow(r, -0.2e1) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * cos(theta) + 0.142309060522577509283130e4 * pow(r, -0.2e1) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * sin(theta);
  vr = 0.143113982384782921549911e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) - 0.143113982384782921549911e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) + 0.130093897361247308647679e2 * jn(0, 0.130093897361247308647679e2 * r) * C4 * sin(t * omegaRoot) * cos(theta) - 0.130093897361247308647679e2 * jn(0, 0.130093897361247308647679e2 * r) * C4 * cos(t * omegaRoot) * sin(theta) + 0.647242313233288727871400e5 * mu * yn(0, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) - 0.647242313233288727871400e5 * mu * yn(0, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) - 0.186182557353253047298274e5 * yn(0, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) + 0.186182557353253047298274e5 * yn(0, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) - 0.999999999999999999999997e0 / r * jn(1, 0.130093897361247308647679e2 * r) * C4 * sin(t * omegaRoot) * cos(theta) + 0.999999999999999999999997e0 / r * jn(1, 0.130093897361247308647679e2 * r) * C4 * cos(t * omegaRoot) * sin(theta) + 0.701497290712961400003724e2 / mu * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) - 0.701497290712961400003724e2 / mu * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) - 0.142309060522577509283130e4 * pow(r, -0.2e1) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) + 0.142309060522577509283130e4 * pow(r, -0.2e1) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) + 0.520639974058253950243800e3 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * sin(t * omegaRoot) * cos(theta) - 0.520639974058253950243800e3 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * cos(t * omegaRoot) * sin(theta) - 0.497519350531880418705240e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * mu * sin(t * omegaRoot) * cos(theta) + 0.497519350531880418705240e4 / r * yn(1, 0.130093897361247308647679e2 * r) * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * mu * cos(t * omegaRoot) * sin(theta);
  pr = -0.240849861329871999774099e6 * C4 * mu / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) / pow(r, k) * cos(k * theta) * cos(t * omegaRoot) - 0.240849861329871999774099e6 * C4 * mu / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) / pow(r, k) * sin(k * theta) * sin(t * omegaRoot) + 0.881153069904669756485534e5 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * pow(r, k) * mu * cos(k * theta) * cos(t * omegaRoot) + 0.881153069904669756485534e5 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * pow(r, k) * mu * sin(k * theta) * sin(t * omegaRoot) + 0.118724362715255684088706e5 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * pow(r, k) * cos(k * theta) * cos(t * omegaRoot) + 0.118724362715255684088706e5 * C4 / (-0.259171103056823175687526e5 * mu + 0.280781480658330616286753e4) * pow(r, k) * sin(k * theta) * sin(t * omegaRoot);
#endMacro
